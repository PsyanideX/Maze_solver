{"version":3,"file":"./bundle.js","mappings":"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","sources":["webpack://maze-generator-and-solver/./src/common.ts","webpack://maze-generator-and-solver/./src/init.ts","webpack://maze-generator-and-solver/./src/maze_generators.ts","webpack://maze-generator-and-solver/./src/maze_solvers.ts","webpack://maze-generator-and-solver/./src/properties.ts","webpack://maze-generator-and-solver/webpack/bootstrap","webpack://maze-generator-and-solver/./src/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNeighbours = exports.getNode = exports.clearGrid = exports.removeWall = exports.addWall = void 0;\nvar properties_1 = require(\"./properties\");\nfunction addWall(x, y) {\n    properties_1.mazeProperties.grid[x][y] = -1;\n}\nexports.addWall = addWall;\nfunction removeWall(x, y) {\n    properties_1.mazeProperties.grid[x][y] = 0;\n}\nexports.removeWall = removeWall;\nfunction clearGrid() {\n    if (!properties_1.mazeProperties.isGridClean) {\n        for (var i = 0; i < properties_1.mazeProperties.timeouts.length; i++) {\n            clearTimeout(properties_1.mazeProperties.timeouts[i]);\n        }\n        properties_1.mazeProperties.timeouts = [];\n        for (var i = 0; i < properties_1.mazeProperties.grid.length; i++) {\n            for (var j = 0; j < properties_1.mazeProperties.grid[0].length; j++) {\n                if (properties_1.mazeProperties.grid[i][j] > -1) {\n                    removeWall(i, j);\n                }\n                else if (properties_1.mazeProperties.grid[i][j] < -1) {\n                    addWall(i, j);\n                }\n            }\n        }\n        properties_1.mazeProperties.isGridClean = true;\n    }\n}\nexports.clearGrid = clearGrid;\nfunction getNode(x, y) {\n    if (x >= 0 && x < properties_1.mazeProperties.grid.length && y >= 0 && y < properties_1.mazeProperties.grid[0].length) {\n        return properties_1.mazeProperties.grid[x][y];\n    }\n    return -2;\n}\nexports.getNode = getNode;\nfunction getNeighbours(cell, distance) {\n    var up = [cell[0], cell[1] - distance];\n    var right = [cell[0] + distance, cell[1]];\n    var down = [cell[0], cell[1] + distance];\n    var left = [cell[0] - distance, cell[1]];\n    return [up, right, down, left];\n}\nexports.getNeighbours = getNeighbours;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar maze_generators_1 = require(\"./maze_generators\");\nvar maze_solvers_1 = require(\"./maze_solvers\");\nvar properties_1 = require(\"./properties\");\nfunction generateMazeAndSolution(gridSizeX, gridSizeY) {\n    properties_1.initialConfig.gridSizeX = gridSizeX;\n    properties_1.initialConfig.gridSizeY = gridSizeY;\n    generateGrid();\n    (0, maze_generators_1.maze_generators)();\n    (0, maze_solvers_1.maze_solvers)();\n    return buildReturnValue(properties_1.mazeProperties);\n}\nexports.default = generateMazeAndSolution;\nfunction generateGrid() {\n    properties_1.mazeProperties.grid = new Array(properties_1.initialConfig.gridSizeX).fill(0).map(function () { return new Array(properties_1.initialConfig.gridSizeY).fill(0); });\n    properties_1.mazeProperties.startPos = [1, properties_1.initialConfig.gridSizeY - 2];\n    properties_1.mazeProperties.targetPos = [properties_1.initialConfig.gridSizeX - 2, 1];\n}\nfunction buildReturnValue(mazeProperties) {\n    return {\n        maze: mazeProperties.finishedGrid,\n        path: mazeProperties.finishedPath\n    };\n}\nconsole.log(generateMazeAndSolution(21, 21));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maze_generators = void 0;\nvar common_1 = require(\"./common\");\nvar properties_1 = require(\"./properties\");\nfunction maze_generators() {\n    properties_1.mazeProperties.generating = true;\n    properties_1.mazeProperties.isGridClean = false;\n    kruskal_algorithm();\n}\nexports.maze_generators = maze_generators;\nfunction finishGenerate() {\n    properties_1.mazeProperties.finishedGrid = JSON.parse(JSON.stringify(properties_1.mazeProperties.grid));\n    properties_1.mazeProperties.finishedGrid[properties_1.mazeProperties.startPos[1]][properties_1.mazeProperties.startPos[0]] = 99;\n    properties_1.mazeProperties.finishedGrid[properties_1.mazeProperties.targetPos[1]][properties_1.mazeProperties.targetPos[0]] = 100;\n}\nfunction kruskal_algorithm() {\n    fillWalls();\n    var nb_areas = 0;\n    var wall_list = [];\n    for (var i = 1; i < properties_1.mazeProperties.grid.length - 1; i++) {\n        for (var j = 1; j < properties_1.mazeProperties.grid[0].length - 1; j++) {\n            if (i % 2 == 1 && j % 2 == 1) {\n                nb_areas++;\n                properties_1.mazeProperties.grid[i][j] = nb_areas;\n            }\n            if ((i + j) % 2 == 1)\n                wall_list.push([i, j]);\n        }\n    }\n    var isGenerating = true;\n    while (isGenerating) {\n        if (nb_areas == 1) {\n            isGenerating = false;\n            (0, common_1.clearGrid)();\n            properties_1.mazeProperties.generating = false;\n            finishGenerate();\n            return;\n        }\n        var index = randomInt(0, wall_list.length);\n        var wall = wall_list[index];\n        wall_list.splice(index, 1);\n        var cell_pair = void 0;\n        if (properties_1.mazeProperties.grid[wall[0] - 1][wall[1]] > -1) {\n            cell_pair = [properties_1.mazeProperties.grid[wall[0] - 1][wall[1]], properties_1.mazeProperties.grid[wall[0] + 1][wall[1]]];\n        }\n        else {\n            cell_pair = [properties_1.mazeProperties.grid[wall[0]][wall[1] - 1], properties_1.mazeProperties.grid[wall[0]][wall[1] + 1]];\n        }\n        if (cell_pair[0] != cell_pair[1]) {\n            for (var i = 1; i < properties_1.mazeProperties.grid.length - 1; i += 2) {\n                for (var j = 1; j < properties_1.mazeProperties.grid[0].length - 1; j += 2) {\n                    if (properties_1.mazeProperties.grid[i][j] == cell_pair[0]) {\n                        properties_1.mazeProperties.grid[i][j] = cell_pair[1];\n                    }\n                }\n            }\n            (0, common_1.removeWall)(wall[0], wall[1]);\n            nb_areas--;\n        }\n    }\n}\nfunction randomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nfunction fillWalls() {\n    for (var i = 0; i < properties_1.mazeProperties.grid.length; i++)\n        for (var j = 0; j < properties_1.mazeProperties.grid[0].length; j++)\n            if (i % 2 == 0 || j % 2 == 0)\n                (0, common_1.addWall)(i, j);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maze_solvers = void 0;\nvar common_1 = require(\"./common\");\nvar properties_1 = require(\"./properties\");\nvar nodeList;\nvar nodeListIndex;\nvar pathList;\nvar pathListIndex;\nvar found = false;\nvar path = false;\nfunction maze_solvers() {\n    (0, common_1.clearGrid)();\n    properties_1.mazeProperties.isGridClean = false;\n    (0, common_1.clearGrid)();\n    breadthFirst();\n}\nexports.maze_solvers = maze_solvers;\nfunction mazeSolversInterval() {\n    var isSolving = true;\n    while (isSolving) {\n        if (!path) {\n            nodeListIndex++;\n            if (nodeListIndex == nodeList.length) {\n                if (!found) {\n                    isSolving = false;\n                }\n                else {\n                    path = true;\n                }\n            }\n        }\n        else {\n            if (pathListIndex == pathList.length) {\n                isSolving = false;\n                properties_1.mazeProperties.finishedPath = JSON.parse(JSON.stringify(pathList));\n                return;\n            }\n            pathListIndex++;\n        }\n    }\n}\nfunction breadthFirst() {\n    nodeList = [];\n    nodeListIndex = 0;\n    pathList = [];\n    pathListIndex = 0;\n    found = false;\n    path = false;\n    var frontier = [properties_1.mazeProperties.startPos];\n    properties_1.mazeProperties.grid[properties_1.mazeProperties.startPos[0]][properties_1.mazeProperties.startPos[1]] = 1;\n    do {\n        var list = (0, common_1.getNeighbours)(frontier[0], 1);\n        frontier.splice(0, 1);\n        for (var i = 0; i < list.length; i++) {\n            if ((0, common_1.getNode)(list[i][0], list[i][1]) == 0) {\n                frontier.push(list[i]);\n                properties_1.mazeProperties.grid[list[i][0]][list[i][1]] = i + 1;\n                if (list[i][0] == properties_1.mazeProperties.targetPos[0] && list[i][1] == properties_1.mazeProperties.targetPos[1]) {\n                    found = true;\n                    break;\n                }\n                nodeList.push(list[i]);\n            }\n        }\n    } while (frontier.length > 0 && !found);\n    if (found) {\n        var currentNode = properties_1.mazeProperties.targetPos;\n        while (currentNode[0] != properties_1.mazeProperties.startPos[0] || currentNode[1] != properties_1.mazeProperties.startPos[1]) {\n            switch (properties_1.mazeProperties.grid[currentNode[0]][currentNode[1]]) {\n                case 1:\n                    currentNode = [currentNode[0], currentNode[1] + 1];\n                    break;\n                case 2:\n                    currentNode = [currentNode[0] - 1, currentNode[1]];\n                    break;\n                case 3:\n                    currentNode = [currentNode[0], currentNode[1] - 1];\n                    break;\n                case 4:\n                    currentNode = [currentNode[0] + 1, currentNode[1]];\n                    break;\n                default:\n                    break;\n            }\n            pathList.push(currentNode);\n        }\n        pathList.pop();\n        pathList.reverse();\n    }\n    mazeSolversInterval();\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mazeProperties = exports.initialConfig = exports.gridSizeY = exports.gridSizeX = void 0;\nexports.gridSizeX = 21;\nexports.gridSizeY = 21;\nexports.initialConfig = {\n    gridSizeX: 21,\n    gridSizeY: 21\n};\nexports.mazeProperties = {\n    grid: undefined,\n    startPos: undefined,\n    targetPos: undefined,\n    isGridClean: true,\n    generating: false,\n    timeouts: [],\n    finishedGrid: undefined,\n    finishedPath: undefined,\n    renderGrid: undefined\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./maze_generators\");\nrequire(\"./maze_solvers\");\nrequire(\"./init\");\n"],"names":["Object","defineProperty","exports","value","getNeighbours","getNode","clearGrid","removeWall","addWall","properties_1","x","y","mazeProperties","grid","isGridClean","i","timeouts","length","clearTimeout","j","cell","distance","maze_generators_1","maze_solvers_1","generateMazeAndSolution","gridSizeX","gridSizeY","initialConfig","Array","fill","map","startPos","targetPos","maze_generators","maze_solvers","maze","finishedGrid","path","finishedPath","console","log","common_1","generating","fillWalls","nb_areas","wall_list","push","min","max","isGenerating","JSON","parse","stringify","index","Math","ceil","floor","random","wall","splice","cell_pair","kruskal_algorithm","nodeList","nodeListIndex","pathList","pathListIndex","found","frontier","list","currentNode","pop","reverse","isSolving","mazeSolversInterval","breadthFirst","undefined","renderGrid","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__"],"sourceRoot":""}